# Определение функции
def max_dragon_power(n):
    if n <= 0:
        print("Количество голов должно быть натуральным числом.")
    else:
        # Инициализация массива для динамического программирования
        dp = [0] * (n+1)
        dp[0] = 1 # Базовый случай для корректной работы
        dp[1] = 1 # 1 голова = 1 сила

        # Заполняем массив dp для всех количеств голов от 2 до n
        for i in range(2, n + 1):
            max_power = 0
            # Перебираем возможное количество голов у последнего дракона
            # От 2 до 7 (по условия 7 голов максимум)
            # Или до i, если i < 7
            for j in range(2, min(i, 7) + 1):
                # Вычисляем текущее значение силы
                current = j * dp[i - j]
                # Выбираем максимальное значение
                if current > max_power:
                    max_power = current
            dp[i] = max_power
        return dp[n]

# Основной блок программы
if __name__ == "__main__":
    try:
        n = int(input("Введите количество голов: "))
        if 0 < n < 100:
            result = max_dragon_power(n)
            print(f"Максимально возможное значение силы: {result}")
        else:
            print("Ошибка: количество голов должно быть от 1 до 99")
    except ValueError:
        print("Ошибка: только числовой ввод")
